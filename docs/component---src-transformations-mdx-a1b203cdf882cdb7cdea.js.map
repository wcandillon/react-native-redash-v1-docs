{"version":3,"sources":["webpack:///../src/transformations.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,uBACA,iBAAQ,CACN,GAAM,cACL,0BAAYC,WAAW,MAAvB,iBACH,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6IAML,6GACiB,0BAAYA,WAAW,KAAvB,aADjB,KAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4HAOL,uBACA,iBAAQ,CACN,GAAM,mBACL,0BAAYA,WAAW,MAAvB,sBACH,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gHAIL,mEACA,iCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wF,gMAYTJ,EAAWK,gBAAiB","file":"component---src-transformations-mdx-a1b203cdf882cdb7cdea.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/wcandillon/tmp/react-native-redash/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"transformations\"\n    }}>{`Transformations`}</h1>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"translatez\"\n    }}><inlineCode parentName=\"h2\">{`translateZ()`}</inlineCode></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const translateZ: (perspective: Animated.Adaptable<number>, z: Animated.Adaptable<number>) => {\n    scale: Animated.Node<number>;\n};\n`}</code></pre>\n    <p>{`Convert a translateZ transformation into a scale transformation.\nExample usage with `}<inlineCode parentName=\"p\">{`transform`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const perspective = 800;\nconst z = new Value(100);\n//...\ntransform: [{ perspective }, translateZ(perspective, z)];\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"transformorigin\"\n    }}><inlineCode parentName=\"h2\">{`transformOrigin()`}</inlineCode></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const transformOrigin: ({ x, y }: Point, ...transformations: AnimatedTransform[]) => AnimatedTransform[];\n`}</code></pre>\n    <p>{`Changes the origin of the transformations.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View\n  style={{\n    transform: transformOrigin(cx, cy, { rotateX })\n  }}\n/>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}