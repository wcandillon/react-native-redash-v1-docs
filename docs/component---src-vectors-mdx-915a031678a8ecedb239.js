(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{ZByA:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return i}));t("4cIV"),t("NZyX"),t("c0Gx"),t("QNbk"),t("+ytS"),t("WY76");var r=t("V0Ug"),a=t("sN0p");t("xH0s");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/vectors.mdx"}});var b={_frontmatter:c},m=a.a;function i(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(r.b)(m,o({},b,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"vectors"},"Vectors"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"vec"},Object(r.b)("inlineCode",{parentName:"h2"},"vec")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-tsx"}),"export declare const vec: {\n    create: (x: Animated.Adaptable<number>, y?: Animated.Adaptable<number>) => {\n      x: Animated.Adaptable<number>;\n      y: Animated.Adaptable<number>;\n    },\n    createValue: (x: number, y?: number) => {\n      x: Animated.Value<number>;\n      y: Animated.Value<number>;\n    },\n    invert: (a: Vector) => {\n        x: Animated.Node<number>;\n        y: Animated.Node<number>;\n    };\n    add: (a: Vector, b: Vector) => {\n        x: Animated.Node<number>;\n        y: Animated.Node<number>;\n    };\n    sub: (a: Vector, b: Vector) => {\n        x: Animated.Node<number>;\n        y: Animated.Node<number>;\n    };\n    multiply: (a: Vector, b: Vector) => {\n        x: Animated.Node<number>;\n        y: Animated.Node<number>;\n    };\n    divide: (a: Vector, b: Vector) => {\n        x: Animated.Node<number>;\n        y: Animated.Node<number>;\n    };\n    set: (a: VectorValue, b: Vector) => Animated.Node<number>;\n};\n")))}i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/vectors.mdx"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-vectors-mdx-915a031678a8ecedb239.js.map