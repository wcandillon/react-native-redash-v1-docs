(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"xha+":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return c}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var a=t("/FXl"),i=t("TjRS");t("aD51");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/transitions.mdx"}});var s={_frontmatter:o},b=i.a;function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,["components"]);return Object(a.b)(b,r({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"transitions"},"Transitions"),Object(a.b)("p",null,"Transitions are essential to the user experience.\nRedash offers four utility functions for transitions which are broke down in the table below.\nIf you want to build a transition based on a React state change use ",Object(a.b)("inlineCode",{parentName:"p"},"useTimingTransition()")," or ",Object(a.b)("inlineCode",{parentName:"p"},"useSpringTransition()"),".\nTo transition an animation value change, use ",Object(a.b)("inlineCode",{parentName:"p"},"withTimingTransition()")," or ",Object(a.b)("inlineCode",{parentName:"p"},"withSpringTransition()"),"."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",r({parentName:"tr"},{align:null})),Object(a.b)("th",r({parentName:"tr"},{align:"center"}),"State (JS Thread)"),Object(a.b)("th",r({parentName:"tr"},{align:"right"}),"Value (UI Thread)"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:null}),"Timing"),Object(a.b)("td",r({parentName:"tr"},{align:"center"}),"useTimingTransition()"),Object(a.b)("td",r({parentName:"tr"},{align:"right"}),"withTimingTransition()")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",r({parentName:"tr"},{align:null}),"Spring"),Object(a.b)("td",r({parentName:"tr"},{align:"center"}),"useSpringTransition()"),Object(a.b)("td",r({parentName:"tr"},{align:"right"}),"withSpringTransition()")))),Object(a.b)("h2",{id:"attach-a-transition-to-a-state"},"Attach a transition to a state"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'import {useTimingTransition} from "react-native-redash";\n\nconst Toggle = () => {\n  const [open, setOpen] = useState(false);\n  const transition = useTimingTransition(open, { duration: 400 });\n}\n')),Object(a.b)("h2",{id:"attach-a-transition-to-an-animation-value"},"Attach a transition to an animation value"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'import {withTimingTransition} from "react-native-redash";\n\nconst Toggle = () => {\n  const open = new Value<number>(0);\n  const transition = withTimingTransition(open, { duration: 400 });\n}\n')),Object(a.b)("hr",null),Object(a.b)("h2",{id:"usetimingtransition"},Object(a.b)("inlineCode",{parentName:"h2"},"useTimingTransition()")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'const useTimingTransition: (state: number | boolean, config?: Partial<Pick<Animated.TimingConfig, "duration" | "easing">>) => Animated.Node<number>;\n')),Object(a.b)("hr",null),Object(a.b)("h2",{id:"usespringtransition"},Object(a.b)("inlineCode",{parentName:"h2"},"useSpringTransition()")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'const useSpringTransition: (state: number | boolean, config?: Partial<Pick<Animated.SpringConfig, "damping" | "mass" | "stiffness" | "overshootClamping" | "restSpeedThreshold" | "restDisplacementThreshold">>) => Animated.Node<number>;\n')),Object(a.b)("hr",null),Object(a.b)("h2",{id:"withtimingtransition"},Object(a.b)("inlineCode",{parentName:"h2"},"withTimingTransition()")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'const withTimingTransition: (value: Animated.Node<number>, timingConfig?: Partial<Pick<Animated.TimingConfig, "duration" | "easing">>, gestureState?: Animated.Value<State>) => Animated.Node<number>;\n')),Object(a.b)("hr",null),Object(a.b)("h2",{id:"withspringtransition"},Object(a.b)("inlineCode",{parentName:"h2"},"withSpringTransition()")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),'const withSpringTransition: (value: Animated.Node<number>, springConfig?: Partial<Pick<Animated.SpringConfig, "damping" | "mass" | "stiffness" | "overshootClamping" | "restSpeedThreshold" | "restDisplacementThreshold">>, velocity?: Animated.Adaptable<number>, gestureState?: Animated.Value<State>) => Animated.Node<number>;\n')))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/transitions.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-transitions-mdx-f54162ffb0012f705d4c.js.map